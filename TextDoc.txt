VSCODE

tasks.json
// {
//     // See https://go.microsoft.com/fwlink/?LinkId=733558
//     // for the documentation about the tasks.json format
//     "version": "0.1.0",
//     "command": "echo",
//     "isShellCommand": true,
//     "args": ["Hello World"],
//     "showOutput": "always"
// }
{
    "version": "0.1.0",
    "command": "gcc",
    "args": ["-g","${file}","-o","${file}.exe"],    // gcc编译命令参数
    "problemMatcher": {
        "owner": "c",
        "fileLocation": ["relative", "${workspaceRoot}"],
        "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
        }
    }
}

launch.json
// {
//     "version": "0.2.0",
//     "configurations": [
        
//         {
//             "name": "C++ Launch (Windows)",
//             "type": "cppvsdbg",
//             "request": "launch",
//             "program": "enter program name, for example ${workspaceRoot}/a.exe",
//             "args": [],
//             "stopAtEntry": false,
//             "cwd": "${workspaceRoot}",
//             "environment": [],
//             "externalConsole": false
//         },
//         {
//             "name": "C++ Attach (Windows)",
//             "type": "cppvsdbg",
//             "request": "attach",
//             "processId": "${command.pickProcess}"
//         }
//     ]
// }
{
    "version": "0.2.0",
    "configurations": [
        
        {
            "name": "C Launch (GDB)",                 // 配置名称，将会在启动配置的下拉菜单中显示
            "type": "cppdbg",                           // 配置类型，这里只能为cppdbg
            "request": "launch",                        // 请求配置类型，可以为launch（启动）或attach（附加）
            "targetArchitecture": "x86",                // 生成目标架构，一般为x86或x64，可以为x86, arm, arm64, mips, x64, amd64, x86_64
            "program": "${file}.exe",                   // 将要进行调试的程序的路径
            "miDebuggerPath":"d:\\MinGW\\bin\\gdb.exe", // miDebugger的路径，注意这里要与MinGw的路径对应
            "args": [],                                 // 程序调试时传递给程序的命令行参数，一般设为空即可
            "stopAtEntry": true,                       // 设为true时程序将暂停在程序入口处，一般设置为false
            "cwd": "${workspaceRoot}",                  // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
            "externalConsole": true,                    // 调试时是否显示控制台窗口，一般设置为true显示控制台
            "preLaunchTask": "gcc"　　                  // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc
        }
    ]
}